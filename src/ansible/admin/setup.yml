---
- hosts: localhost
  vars_prompt:

    - name: vaultkey
      prompt: Set Vault password
      unsafe: true
      private: true

    - name: sshPassword
      prompt: Set ssh-key password (optional)
      unsafe: true
      private: true

    - name: pveHost
      prompt: Set PVE host
      private: false

    - name: pveUser
      prompt: Set PVE username
      private: false

    - name: pvePass
      prompt: Set PVE password
      unsafe: true
      private: true

  tasks:

    - name: Create files folder
      ansible.builtin.file:
        path: 'files'
        state: directory

    - name: Create inventory folder
      ansible.builtin.file:
        path: 'inventory'
        state: directory

    - name: Create public keys folder
      ansible.builtin.file:
        path: 'files/public-keys'
        state: directory

    - name: Create tokens folder
      ansible.builtin.file:
        path: 'files/tokens'
        state: directory

    - name: Create vault file
      ansible.builtin.copy:
        content: "{{ vaultkey }}"
        dest: files/.vaultkey

    - ansible.builtin.stat:
        path: files/ansible-key
      register: private_key
      
    - name: Generate ssh keys
      ansible.builtin.command: ssh-keygen -q -t ed25519 -f "files/ansible-key" -N "{{sshPassword}}"
      when: not private_key.stat.exists

    - ansible.builtin.stat:
        path: files/ansible-key.pub
      register: public_key

    - name: Copy public key
      ansible.builtin.copy:
        src: files/ansible-key.pub
        dest: files/public-keys/ansible-key.pub
      when: public_key.stat.exists
    
    - name: Remove old public key
      ansible.builtin.file:
        path: files/ansible-key.pub
        state: absent
      when: public_key.stat.exists

    - name: Set pve host
      ansible.builtin.copy:
        content: "[all]\n{{ pveHost }}"
        dest: inventory/hosts

    - ansible.builtin.stat:
        path: group_vars/all/vault
      register: vault_all

    - name: Set pve username
      ansible.builtin.lineinfile:
        path: group_vars/all/vars
        regexp: 'ansible_ssh_user:'
        line: 'ansible_ssh_user: {{ pveUser }}'
      when: not vault_all.stat.exists

    - name: Set pve password
      ansible.builtin.lineinfile:
        path: group_vars/all/vars
        regexp: 'ansible_ssh_pass:'
        line: 'ansible_ssh_pass: {{ pvePass }}'
      when: not vault_all.stat.exists
      no_log: True

    - ansible.builtin.copy:
        src: group_vars/all/vars
        dest: group_vars/all/vault
      when: not vault_all.stat.exists
          
    - name: Remove raw all variables
      ansible.builtin.file:
        path: group_vars/all/vars
        state: absent
      when: not vault_all.stat.exists

    - name: Encrypt group_vars/all/vars
      ansible.builtin.command: ansible-vault encrypt group_vars/all/vault --vault-password-file files/.vaultkey
      when: not vault_all.stat.exists
